@import '../../build.css';

.pa-button {
  @mixin shared-styles;

  --pa-button-radius: var(--pa-border-radius-small);
  --pa-button-border-width: var(--pa-border-width-small);
  --pa-button-font-weight: var(--pa-font-weight-normal);
  --pa-button-outline: var(--pa-outline-width);

  background-image: linear-gradient(
    var(--pa-stripe-angle),
    var(--pa-color-basic-bright) 25%,
    var(--pa-color-basic-brightest) 25%,
    var(--pa-color-basic-brightest) 50%,
    var(--pa-color-basic-bright) 50%,
    var(--pa-color-basic-bright) 75%,
    var(--pa-color-basic-brightest) 75%,
    var(--pa-color-basic-brightest) 100%
  );
  background-size: var(--pa-stripe-size);
  background-color: var(--pa-color-basic-brightest);
  border-color: var(--pa-color-basic-bright);
  border-radius: var(--pa-button-radius);
  border-style: solid;
  border-width: var(--pa-button-border-width);
  color: var(--pa-color-basic-darker);
  font-family: var(--pa-font-family);
  font-size: var(--pa-font-size-normal);
  font-weight: var(--pa-button-font-weight);
  outline: var(--pa-button-outline) solid transparent;
  transition-duration: var(--pa-transition-duration-normal);
  transition-property: var(--pa-transition-colors);

  &:hover {
    border-color: var(--pa-color-basic-normal);
  }

  &:active,
  &:focus {
    outline-color: var(--pa-color-basic-brighter);
  }

  &--outline {
    background-image: none;
    background-color: transparent;
  }

  @each $variant in primary, secondary, tertiary {
    &--$(variant) {
      background-image: linear-gradient(
        var(--pa-stripe-angle),
        var(--pa-color-$(variant)-dark) 25%,
        var(--pa-color-$(variant)-normal) 25%,
        var(--pa-color-$(variant)-normal) 50%,
        var(--pa-color-$(variant)-dark) 50%,
        var(--pa-color-$(variant)-dark) 75%,
        var(--pa-color-$(variant)-normal) 75%,
        var(--pa-color-$(variant)-normal) 100%
      );
      background-color: var(--pa-color-$(variant)-normal);
      border-color: transparent;
      color: var(--pa-color-basic-brightest);

      &:hover {
        border-color: var(--pa-color-$(variant)-darkest);
      }

      &:active,
      &:focus {
        outline-color: var(--pa-color-$(variant)-brighter);
      }
    }

    &--outline&--$(variant) {
      background-image: none;
      background-color: transparent;
      border-color: var(--pa-color-$(variant)-normal);
      color: var(--pa-color-$(variant)-dark);

      &:hover {
        background-color: var(--pa-color-$(variant)-brightest);
        border-color: var(--pa-color-$(variant)-darkest);
        color: var(--pa-color-$(variant)-darkest);
      }
    }
  }

  @each $intent in info, success, warning, error {
    &.is-$(intent) {
      background-image: linear-gradient(
        var(--pa-stripe-angle),
        var(--pa-color-$(intent)-brighter) 25%,
        var(--pa-color-$(intent)-bright) 25%,
        var(--pa-color-$(intent)-bright) 50%,
        var(--pa-color-$(intent)-brighter) 50%,
        var(--pa-color-$(intent)-brighter) 75%,
        var(--pa-color-$(intent)-bright) 75%,
        var(--pa-color-$(intent)-bright) 100%
      );
      background-color: var(--pa-color-$(intent)-bright);
      color: var(--pa-color-$(intent)-darker);
      border-color: transparent;

      &:hover {
        border-color: var(--pa-color-$(intent)-normal);
      }

      &:active,
      &:focus {
        outline-color: var(--pa-color-$(intent)-brighter);
      }
    }

    &--outline&.is-$(intent) {
      background-image: none;
      background-color: transparent;
      border-color: var(--pa-color-$(intent)-bright);
      color: var(--pa-color-$(intent)-normal);

      &:hover {
        border-color: var(--pa-color-$(intent)-normal);
        color: var(--pa-color-$(intent)-darker);
      }
    }
  }

  &.is-disabled {
    opacity: 0.5;
  }
}
